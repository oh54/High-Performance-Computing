\relax 
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Computing Specifications}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Assignment}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}The Native Function}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Arbitrary matrix dimensions given in the assignment.\relax }}{1}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:matrix1}{{1}{1}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {1}Function Prototype}{1}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2}Function Prototype}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}DGEMM and Comparison}{2}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {3}lib}{2}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces This table displays the performance (MFlop/s) of the two functions matmult\_nat() and matmult\_lib() with a square matrix size of 512x512 and 2048x2048.\relax }}{2}}
\newlabel{Table:nat}{{1}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}The Permutations}{3}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {4}lib}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}Performance analysis}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces The performance of the different permutations versus the memory footprint, with L1, L2, and L3 caches shown as the vertical black dotted lines.\relax }}{4}}
\newlabel{fig:permGraph_none}{{2}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces The performance of the different permutations versus the memory footprint with compiler option $\mathrm  {-fast}$ activated. L1, L2, and L3 caches shown as the vertical black dotted lines.\relax }}{5}}
\newlabel{fig:permGraph_fast}{{3}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.4.1}Analyzer Tool}{5}}
\newlabel{fig:compGraph_mkn}{{4a}{6}}
\newlabel{sub@fig:compGraph_mkn}{{a}{6}}
\newlabel{fig:compGraph_knm}{{4b}{6}}
\newlabel{sub@fig:compGraph_knm}{{b}{6}}
\newlabel{fig:compGraph_mnk}{{4c}{6}}
\newlabel{sub@fig:compGraph_mnk}{{c}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Performance versus memory footprint with different compiler options for (\subref  {fig:compGraph_mkn}) mkn, (\subref  {fig:compGraph_knm}) knm, and (\subref  {fig:compGraph_mnk}) mnk.\relax }}{6}}
\newlabel{fig:compGraph}{{4}{6}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Displaying L1 and L2 cache hit ratio for the various permutations for a 1000x1000 matrix.\relax }}{7}}
\newlabel{Table:nat}{{2}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}Loop Blocking}{7}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {5}Blocked blk Prototype}{7}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {6}Blocked Loop Function}{7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.1}Block Performance and Comparison}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces d\relax }}{9}}
\newlabel{fig:optblock}{{5}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces The memory footprint of the blk and mkn functions.\relax }}{9}}
\newlabel{fig:mknblk}{{6}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Conclusion}{9}}
